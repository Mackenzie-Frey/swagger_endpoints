openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'BarStock Back-End'
  description: Endpoint for businesses to create an account.
paths:
  /business_items:
    get:
      description: If the request is successful, a 200 status code will be returned, along with the items the business has previously ordered. A 404 status code will be returned if the API key is invalid.
      parameters:
        - in: query
          name: api_key
          required: true
          schema:
            type: string
            example: jgn983hy48thw9begh98h4539h4
          description: The business's api_key.
      responses:
        '200':
          description: The request for the business's items, aka previously ordered items, was successful.
          content:
              application/json:
                schema:
                  type: object
                  properties:
                      data:
                        type: string
                        example:
                          - id: '1'
                            type: business_item
                            attributes:
                              id: 1
                              alc_type: beer
                              alc_category: porter
                              thumbnail: https://products0.imgix.drizly.com/ci-boulder-beer-shake-chocolate-porter-fb43ba821fe9cf64.jpeg?auto=format%2Ccompress&fm=jpeg&q=20
                              price_sold: 3
                              serving_size: 1.5
                              quantity: 5
                          - id: '2'
                            type: business_item
                            attributes:
                              id: 2
                              alc_type: liquor
                              alc_category: whiskey
                              thumbnail: https://products1.imgix.drizly.com/ci-jim-beam-bourbon-whiskey-28f7c73c8e0e8223.png?auto=format%2Ccompress&fm=jpeg&q=20
                              price_sold: 5
                              serving_size: 1.5
                              quantity: 2
        '404':
          description: Unsuccessful request, the api_key with either not provided or is invalid and could not be associated with an instance of a business in the database.
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      example: Couldn't find Business
    post:
      description: If the request is successful, a 201 status code will be returned, and the business item will be created in the database. A 422 error will be returned if the request is missing parameters. A 404 status code will be returned if the API key is invalid.
      parameters:
        - in: query
          name: api_key
          required: true
          schema:
            type: string
            example: jgn983hy48thw9begh98h4539h4
          description: The business's api_key.
        - in: query
          name: price_sold
          required: true
          schema:
            type: number
            example: 22
          description: The price in dollars the business sells the item at.
        - in: query
          name: quantity
          schema:
            type: number
            example: 7
          description: The quantity of items to be added to inventory.
        - in: query
          name: serving_size
          required: true
          schema:
            type: number
            example: 1.5
          description: The serving size the business utilizes for that item.
        - in: query
          name: item_id
          required: true
          schema:
            type: number
            example: 3
          description: The id of the item being referenced.
      responses:
        '201':
          description: The POST request to create a business_item was successful.
          content:
              application/json:
                schema:
                  type: object
        '404':
          description: Unsuccessful request, the api_key with either not provided or is invalid and could not be associated with an instance of a business in the database, or the item_id is not provided, or invalid and could not be associated with an instance of an item in the database.
          content:
              application/json:
                schema:
                  type: object
          $ref: ''
          examples:
              Invalid or Missing API Key:
                  error: Couldn't find Business
              Item ID Is Not Included:
                  error: Couldn't find Item without an ID
              Item ID Is Not a Valid Dataype:
                  error: Couldn't find Item with 'id'=three
        '422':
          description: Unprocessable Entity - The request was well formed, but was unable to be followed due to semantic errors.
          content:
              application/json:
                schema:
                  type: object
          $ref: ''
          examples:
              Price Sold Is Not Included:
                  price_sold:
                  - can't be blank
                  - is not a number
              Price Sold Not A Valid Datatype:
                  price_sold:
                  - is not a number
              Serving Size Is Not Included:
                  serving_size:
                  - can't be blank
                  - is not a number
              Serving Size Is Not A Valid Datatype:
                  serving_size:
                  - is not a number
  /businesses/account:
    get:
      description: If the request is successful, a 200 status code will be returned, along with the bussiness's account information, their distributor's information, and their representative's information. A 404 status code will be returned if the API key is invalid.
      parameters:
        - in: query
          name: api_key
          required: true
          schema:
            type: string
            example: jgn983hy48thw9begh98h4539h4
          description: The business's api_key.
      responses:
        '200':
          description: Account details request was successful.
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    business:
                      type: object
                      example:
                        data:
                          id: '1'
                          type: business
                          attributes:
                            id: 1
                            name: The Basement
                            address: 78295 US Highway 40 Winter Park, CO
                            email: mike@thebasement.com
                            phone_number: 9703637280
                            distributor:
                              distributor_address: 8000 Southpark Terrace, Littleton, CO 80120
                              distributor_name: RNDC
                            representative:
                              rep_name: Andy
                              rep_email: andy@gmail.com
                              rep_phone_number: 7205038000
        '404':
          description: Unsuccessful request, the api_key with either not provided or is invalid and could not be associated with a business instance in the database.
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      example: Couldn't find Business

  /businesses/login:
    post:
      description: |
        If the request is successful, a 200 status code will be returned, along with an api_key. A 404 status code will be returned if the business's email cannot be found in the database. A 401 status code will be returned if the password is incorrect.
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
            example: my_email@example.com
          description: The business's unique email.
        - in: query
          name: password
          required: true
          schema:
            type: string
            example: password123
          description: The business's password.
      responses:
        '200':
          description: The log-in request was successful.
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    api_key:
                      type: string
                      example: a9hb9xW4-AhbiLIBW89jcw
        '404':
          description: Unsuccessful request, the business's email was either not provided, or could not be found in the database.
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      example: Couldn't find Business
        '401':
          description: Unsuccessful request, the password was either not provided, or is invalid.
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    unauth:
                      type: string
                      example: Incorrect Password

  /businesses/register:
    post:
      description: If the request is successful, a 201 status code will be returned and a business will be created, saved to the database, and the response will include an api_key. An unsuccessful request will return a 422 error.
      parameters:
        - in: query
          name: name
          required: true
          schema:
            type: string
            example: Mike's Bar
          description: The business's name.
        - in: query
          name: email
          required: true
          schema:
            type: string
            example: inventory@mikesbar.com
          description: The business's email.
        - in: query
          name: password
          required: true
          schema:
            type: string
            example: password123
          description: The business's password.
        - in: query
          name: phone_number
          required: true
          schema:
            type: string
            example: 3039994444
          description: The business's phone number.
        - in: query
          name: distributor_code
          required: true
          schema:
            type: string
            example: CODE1234
          description: The business's distributor_code.
        - in: query
          name: address
          required: true
          schema:
            type: string
            example: 100 Main St Winter Park, CO 80482
          description: The business's address.
      responses:
        '201':
          description: The business record has been created and saved to the database.
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    api_key:
                      type: string
                      example: a9hb9xW4-AhbiLIBW89jcw

        '422':
          description: Unprocessable Entity - The request was well formed, but was unable to be followed due to semantic errors.
          content:
              application/json:
                schema:
                  type: object
          $ref: ''
          examples:
              Email Already Exists:
                  email:
                  - has already been taken
              Distributor Code Is Not Included / Not Valid:
                  distributor:
                    - must exist
              Password Is Not Included:
                  password:
                    - can't be blank
              Address Is Not Included:
                  address:
                    - can't be blank
              Phone Number Is Not Included:
                  phone number:
                    - can't be blank
                    - is not a number
              Phone Number Is Not A Number:
                  phone number:
                    - is not a number
  /distributors/login:
    post:
      description: If the request is successful, a 200 status code will be returned, along with an api_key. A 404 status code will be returned if the distibutor's name cannot be found in the database. A 401 status code will be returned if the password is incorrect.
      parameters:
        - in: query
          name: name
          required: true
          schema:
            type: string
            example: RNDC
          description: The distrutor's unique name.
        - in: query
          name: password
          required: true
          schema:
            type: string
            example: password123
          description: The distributor's password.
      responses:
        '200':
          description: The log-in request was successful.
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    api_key:
                      type: string
                      example: a9hb9xW4-AhbiLIBW89jcw
        '404':
          description: Unsuccessful request, the distributor's name was either not provided, or could not be found in the database.
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      example: Couldn't find Distributor
        '401':
          description: Unsuccessful request, the password was either not provided, or is invalid.
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    unauth:
                      type: string
                      example: Incorrect Password
  /items:
    get:
      description: If the request is successful, a 200 status code will be returned, along with a list of items. A 404 status code will be returned if the api_key is not provided, or is incorrect aka the business cannot be found by that api_key.
      parameters:
        - in: query
          name: api_key
          required: true
          schema:
            type: string
            example: jgn983hy48thw9begh98h4539h4
          description: The business's api_key.
      responses:
        '200':
          description: The items request was successful.
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    api_key:
                      type: string
                      example:
                        data:
                        - id: '1'
                          type: item
                          attributes:
                            alc_type: Alc type 1
                            alc_category: Alc category 1
                            name: Item 1
                            price: 3
                            ounces: 6.6
                            unit: Unit 1
                            thumbnail: https://picsum.photos/id/755/200/200?grayscale
                        - id: '2'
                          type: item
                          attributes:
                            alc_type: Alc type 2
                            alc_category: Alc category 2
                            name: Item 2
                            price: 4.5
                            ounces: 9.9
                            unit: Unit 2
                            thumbnail: https://picsum.photos/id/755/200/200?grayscale
        '404':
          description: Unsuccessful request, the api_key with either not provided or could not be associated with an instance of a business in the database.
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      example: Couldn't find Business

    post:
      description: If the request is successful, a 201 status code will be returned, and the item will be created in the database. A 422 error will be returned if the request is missing parameters. A 404 status code will be returned if the API key for the distributor is invalid.
      parameters:
        - in: query
          name: api_key
          required: true
          schema:
            type: string
            example: f01zdxN0RGWufApdZQxwUg
          description: The business's api_key.
        - in: query
          name: name
          required: true
          schema:
            type: string
            example: Peanut Butter Porter
          description: The name of the item.
        - in: query
          name: alc_type
          schema:
            type: string
            example: beer
          description: The type of item.
        - in: query
          name: alc_category
          required: true
          schema:
            type: string
            example: porter
          description: The category of item (nested within the alc_type).
        - in: query
          name: price
          required: true
          schema:
            type: number
            example: 10
          description: The price the distributor sells the item to the business at (in dollars).
        - in: query
          name: quantity
          required: true
          schema:
            type: number
            example: 24
          description: The quantity of individual units in the item.
        - in: query
          name: ounces
          required: true
          schema:
            type: number
            example: 124.0
          description: The total ounces in the item.
        - in: query
          name: unit
          required: true
          schema:
            type: string
            example: case
          description: The unit type, ie case, keg.
        - in: query
          name: thumbnail
          schema:
            type: string
            example: https://images.unsplash.com/photo-1527281400683-1aae777175f8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80
          description: The url of the item image.
      responses:
        '201':
          description: The POST request to create an item was successful.
          content:
              application/json:
                schema:
                  type: object
        '404':
          description: Unsuccessful request, the api_key with either not provided or is invalid and could not be associated with an instance of a distributor in the database.
          content:
              application/json:
                schema:
                  type: object
          $ref: ''
          examples:
              Invalid or Missing API Key:
                  error: Couldn't find Distributor

        '422':
          description: Unprocessable Entity - The request was well formed, but was unable to be followed due to semantic errors.
          content:
              application/json:
                schema:
                  type: object
          $ref: ''
          examples:
              Name Is Not Included:
                  name:
                  - can't be blank
              Alc Type Is Not Included:
                  alc_type:
                  - can't be blank
              Alc Category Is Not Included:
                  alc_category:
                  - can't be blank
              Price Is Not Included:
                  price:
                  - can't be blank
                  - is not a number
              Price Is Not The Correct Datatype:
                  price:
                  - is not a number
              Quantity Is Not Included:
                  quantity:
                  - can't be blank
                  - is not a number
              Quantity Is Not The Correct Datatype:
                  quantity:
                  - is not a number
              Ounces Is Not Included:
                  ounces:
                  - can't be blank
                  - is not a number
              Ounces Is Not The Correct Datatype:
                  ounces:
                  - is not a number
              Unit Is Not Included:
                  unit:
                  - can't be blank

servers:
  - description: Heroku Endpoint
    url: https://barstock-backend.herokuapp.com/api/v1
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/BarStock/BarStockBackEnd/1.0.0
